.containerEx {
  display: grid;
  grid-template-rows: 
    calc(8 * var(--vh)) 
    calc(92 * var(--vh));
  grid-template-columns: calc(8 * var(--vh)) auto;
  grid-template-areas: 
    'tenHeader tenHeader'
    'taskBar contentArea';
  align-content: center;
  overflow-y: hidden !important;
  overflow-x: hidden !important;
}

.taskBarEx {
  grid-area: taskBar;
  height: 100%;
  background-color: rgb(25,25,25);
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  overflow: hidden;
}

.contentAreaEx {
  grid-area: contentArea;
  overflow-y: auto;
  box-shadow: var(--dropShadowLeft1);
  background-color: var(--clouds);
}

.baseContainer,
.traverseContainer,
.midTraverseContainer {
  display: grid;
  align-content: center;
  overflow-y: hidden !important;
  overflow-x: hidden !important;
}

.baseContainer, .midTraverseContainer {
  grid-template-columns: auto;
}
.baseContainer {
  grid-template-rows: calc(92 * var(--vh)) 0px;
  grid-template-areas: 
    'traverseContent'
    'traverseContent';
}
.midTraverseContainer {
  grid-template-columns: auto minmax(10vmin, 14vmax);
  grid-template-rows: calc(92 * var(--vh));
  grid-template-areas: 
    'traverseContent traverseList';
}

.traverseContainer {
  grid-template-columns: auto minmax(10vmin, 14vmax);
  grid-template-rows: calc( (92 * var(--vh)) - 48px) 48px;
  grid-template-areas: 
    'traverseContent traverseList'
    'actionBarEx actionBarEx';
}

.traverseContent {
  grid-area: traverseContent;
}

.traverseList {
  grid-area: traverseList;
  box-shadow: var(--dropShadowLeft00);
  overflow-y: scroll;
  overflow-x: hidden;
}

.actionBarEx {
  grid-area: actionBarEx;
  align-self: stretch;
  background-color: rgb(25,25,25);
  background-color: var(--contrast);
  box-shadow: var(--dropShadow1);
  display: flex;
  align-items: center;
  justify-content: space-evenly;
  flex-wrap: nowrap;
}
.actionBarEx > div {
  display: flex;
  flex-shrink: 0;
}

/* ////////////////////////////////// */
.containerE {
  display: grid;
  grid-template-rows: auto;
  grid-template-columns: 1fr 1fr 1fr;
  grid-column-gap: 5vw;
  justify-items: stretch;
  grid-template-areas: 
    'oneE twoE threeE';
}
.oneEcontent { grid-area: oneE; }
.twoEcontent { grid-area: twoE; }
.threeEcontent { grid-area: threeE; }

.oneTwoThreeContainer, 
.aFrameContainer,
.vFrameContainer {
  display: grid;
  grid-template-rows: auto auto;
  grid-column-gap: 0.5vw;
  grid-row-gap: 2vh;
  justify-items: stretch;
}
.oneTwoThreeContainer {
  padding: 1vh 1vw;
  grid-template-columns: 2fr 3fr 3fr;
  grid-template-areas: 
    'oneThird twoThirds twoThirds'
    'threeThirds threeThirds threeThirds';
}
.oneThirdContent { grid-area: oneThird; }
.twoThirdsContent { grid-area: twoThirds; }
.threeThirdsContent { grid-area: threeThirds; }

.aFrameContainer, .vFrameContainer {
  grid-template-columns: 1fr 1fr;
  padding: 2vh 2vw;
}
.aFrameContainer {
  grid-template-areas: 
    'avOne avOne'
    'avTwo avThree';
}
.vFrameContainer {
  grid-template-areas: 
    'avOne avTwo'
    'avThree avThree';
}
.avOneContent { grid-area: avOne; }
.avTwoContent { grid-area: avTwo; }
.avThreeContent { grid-area: avThree; }

.cookieRow {
  grid-area: proLeft / proLeft / frontCenter / frontCenter;
  background-color: rgb(25,25,25);
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  width: 100%;
  max-width: calc( 100vw - (20 * var(--vh)) );
  height: 100%;
  max-height: calc(8 * var(--vh));
  padding: 0;
  overflow: hidden;
}
.cookieCrumb {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  align-items: center;
  background-color: transparent;
  overflow: hidden;
  white-space: nowrap;
  transition: all 150ms ease-in-out;
  color: var(--silver);
  max-width: 25vw;
  margin: 0;
  font-size: 2.5vmin;
  text-indent: 1vmin;
  word-break: keep-all;
  text-overflow: ellipsis;
  cursor: pointer;
}
.cookieCrumb:first-child {
  height: 100%;
}
.crumb, .endCrumb {
  color: var(--silverfade);
  overflow: hidden;
  width: 5vmin;
  min-width: 3ch;
  margin-right: 0.5vmin;
}
.crumb::before,
.endCrumb::before {
  background-color: rgb(25,25,25);
	border-style: solid;
	border-width: 0.75vmin 0.75vmin 0 0;
	border-radius: 0 5% 0 0;
	content: '';
	display: inline-block;
	height: 11vmin;
	position: relative;
	top: -1px;
	left: -8.5vmin;
	transform: rotate(45deg);
	vertical-align: top;
	width: 11vmin;
  transition: all 150ms ease-in-out;
}
.cookieCrumb:hover, .cookieCrumb:active {
  background-color: var(--silver);
}
.cookieCrumb:hover,
.cookieCrumb:active {
  color: rgb(25,25,25);
}
.cookieCrumb:hover > .crumb:before,
.cookieCrumb:active > .crumb:before {
  color: var(--silver);
}
.cookieCrumb:hover + .cookieCrumb > .crumb:before,
.cookieCrumb:hover + .endCrumb:before,
.cookieCrumb:active + .cookieCrumb > .crumb:before,
.cookieCrumb:active + .endCrumb:before {
  background-color: var(--silver);
}

.taskColumn {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: center;
  padding-top: var(--vh);
  height: 100%;
}

.smallResultsBox {
  width: 512px;
}
.smallResultsBox td:first-child {
  min-width: 96px;
}
.smallResultsBox td:last-child {
  font-weight: bold;
}
.smallResultsBox th {
  text-align: left;
  border-right: none;
}

.goodBox {
  background-color: var(--emeraldfade);
}
.badBox {
  background-color: var(--alizarinfade);
}

.indexCard {
  background-color: rgb(25,25,25);
}

.itmFltrBlock {
  width: 100%;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  background-color: var(--clouds);
  box-shadow: var(--dropShadow000);
}
.itmFltrBlock > div {
  max-width: 100%;
  display: flex;
  flex-wrap: nowrap;
  justify-content: space-around;
  align-items: center;
}
.itmFltrBlock input, .itmFltrBlock select {
  height: 1.25rem;
  font-size: calc(0.7rem + 0.3vw);
  margin: 5px;
}

.itmFltrStatic {
  display: inline-block;
  width: 2vmax;
}
#itmTglON, #itmTglOFF {
  display: inline-block;
  width: 2vmax;
  cursor: pointer;
}
.onoffFilter > input {
  display: none;
}

.relativeWrap { position: relative; }
.fixedResults {
  max-height: calc( (92 * var(--vh)) - 2vmax - 110px);
  overflow-y: scroll;
  box-shadow: var(--navIndicatorIn);
}
.fixedResults:before,
.fixedResults:after {
  content: '';
  position: absolute;
  height: 10px;
  width: 100%;
  max-width: 875px;
  pointer-events: none
}
.fixedResults:before {
  top: 0;
  background: linear-gradient(to top, rgba(0,0,0,0), rgba(0,0,0,0.15));
}
.fixedResults:after {
  bottom: 0;
  background: linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.15));
}
.dashNumBox {
  min-width: 10vmin;
  min-height: 10vmin;
  font-size: 5vmin;
  border-width: 1.5vmin;
  border-style: solid;
  padding: 1vmin 1.5vmin;
  margin: 0;
}
.dashNumBox p {
  font-size: 2vmin;
  margin: 0;
}


@media (orientation: portrait) {
  .containerEx {
    grid-template-rows: 8vmin calc( (100 * var(--vh)) - 8vmin);
    grid-template-columns: 8vmin auto;
  }
  .containerEx .tenHeader {
    grid-template-rows: 1vmin 7vmin;
    grid-template-columns: 8vmin 1fr 8vmin 8vmin;
    grid-template-areas: 
      'topBorder topBorder topBorder topBorder'
      'homeIcon frontCenter auxRight proRight';
  }
  .taskColumn {
    padding-top: 1vmin;
  }
  .baseContainer {
    grid-template-rows: calc( (100 * var(--vh)) - 8vmin) 0px;
  }
  .midTraverseContainer {
    grid-template-rows: calc( (100 * var(--vh)) - 8vmin);
  }
  .traverseContainer {
    grid-template-rows: calc( (100 * var(--vh)) - 8vmin - 48px) 48px;
  }
  .cookieRow { 
    grid-area: frontCenter;
  }
  .cookieRow {
    max-height: 8vmin
  }
}
body {
  background-color: var(--dark);
  color: black;
  margin: 0;
  padding: 0;
  overflow: hidden;
  transform: translate3d(0, 0, 0);
}

main {
  text-align: left;
  background: var(--clouds);
  z-index: 8;
}

.forceScroll { overflow-y: auto; }
.forceScrollStyle::-webkit-scrollbar {
  width: 1vmax;
  height: 1vmax;
}
.forceScrollStyle::-webkit-scrollbar-track {
  box-shadow: inset 0 0 3px rgba(0,0,0,0.2); 
  background-color: var(--navIndicatorA);
}
.forceScrollStyle::-webkit-scrollbar-thumb {
  box-shadow: inset 0 0 3px rgba(0,0,0,0.2);
  background-color: var(--navIndicatorB);
}
.forceScrollStyle {
  scrollbar-color: var(--navIndicatorA) var(--navIndicatorB);
}

.loading {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(0deg);
  z-index: 10;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.loading > .logoSVG {
  opacity: 0.2;
  animation: spinAround 6s infinite linear;
  width: calc(60 * var(--vh));
  height: calc(60 * var(--vh));
  -webkit-filter: drop-shadow( -5px -5px 5px #000 );
          filter: drop-shadow( -5px -5px 5px #000 );
}
.minispinLogoSVG {
  opacity: 0.8;
  animation: spinAround 4s infinite linear;
  -webkit-filter: drop-shadow( -5px -5px 5px #000 );
          filter: drop-shadow( -5px -5px 5px #000 );
}

@media screen and (prefers-reduced-motion: reduce) { 
  .loading > .logoSVG {
    animation: fadeIn 3s 1 linear;
  }
  .minispinLogoSVG {
    animation: fadeIn 3s 1 linear;
  }
}

.debugWarningLight {
  outline: 10px dotted red;
  outline-offset: -1vmin;
  animation: blinker 3s ease-out infinite;
}

.errorReport {
  margin: 10vh auto;
  width: 50vmax;
  font-size: 1.5rem;
  color: white;
}
.errorReport p {
  font-size: 1.25rem;
  line-height: 1.75rem;
  font-family: sans-serif;
  padding: 0.5vh 0;
}
.errorReport button { font-size: 1.25rem; }
.errorReport a:hover, .errorReport button:hover {
  text-decoration: underline;
}
.errorReport details {
  box-shadow: none;
  letter-spacing: 2px;
  font-family: monospace;
  font-size: 1.2rem;
  line-height: 1.5rem;
}
.errorReport summary {
  padding: 0.5vh 0;
  font-size: 0.9rem;
  font-family: sans-serif;
  text-transform: none;
  cursor: pointer
}

.stickyBar {
  position: -webkit-sticky;
  position: sticky;
  width: auto;
  background-color: transparent;
  z-index: 7;
}
.stickInPlace {
  position: sticky;
  top: 0;
  left: 0;
  z-index: 2;
  background-color: var(--clouds);
  box-shadow: 0 3px 6px var(--contrast);
}

.flexSpace { flex-grow: 2; }

.autoSelf { margin: 0 auto; }
.centreSelf { align-self: center; }
.startSelf { align-self: flex-start; }
.endSelf { align-self: flex-end; }
/* ================================ */

.centreContainer {
  display: grid;
  width: 100vw;
  height: calc(100 * var(--vh));
  grid-template-columns: 100%;
  grid-template-rows: 100%;
  grid-template-areas: 
    'centrecentre';
  align-items: center;
  justify-items: center;
}
.centreBox { grid-area: centrecentre; }

.simpleContainer {
  display: grid;
  /*min-width: 768px;*/
  min-height: 100%;
  max-height: 100%;
  grid-template-rows: 
    calc(8 * var(--vh)) 
    calc(92 * var(--vh));
  grid-template-columns: 100%;
  grid-template-areas: 
    'tenHeader'
    'simpleContent';
  overflow-y: hidden !important;
  overflow-x: hidden !important;
  -webkit-overflow-scrolling: touch;
}
.simpleContent {
  grid-area: simpleContent;
  overflow-y: auto;
  scroll-behavior: smooth;
}
.simpleContent.locked { overflow-y: hidden; }

.auxRight {
  grid-area: auxRight;
  background-color: rgb(25,25,25);
}

.proRight {
  grid-area: proRight;
  background-color: rgb(25,25,25);
}

.splashContainer {
  display: grid;
  width: 100vw;
  height: calc(100 * var(--vh));
  grid-template-rows: calc(8 * var(--vh)) 1fr;
  grid-template-columns: 100%;
  grid-template-areas: 
    'tenHeader'
    'splashContent';
  background-color: var(--dark);
}
.tenHeader {
  grid-area: tenHeader;
  display: grid;
  max-width: 100vw;
  grid-template-rows: var(--vh) calc(7 * var(--vh));
  grid-template-columns: 
    calc(8 * var(--vh))
    calc(7 * var(--vh))
    1fr 
    calc(7 * var(--vh))
    calc(7 * var(--vh));
  grid-template-areas: 
    'topBorder topBorder topBorder topBorder topBorder'
    'homeIcon auxLeft frontCenter auxRight proRight';
  overflow-x: hidden;
  overflow-y: hidden;
  z-index: 7;
  background-color: rgb(25,25,25);
}
.topBorder {
  grid-area: topBorder;
  background-color: var(--neptuneColor);
}
.homeIcon {
  grid-area: homeIcon;
  background-color: var(--neptuneColor);
  padding-bottom: var(--vh);
  z-index: 7;
  background-image: url(neptune-logo-white.svg);
  background-repeat: no-repeat;
  background-position: 50% 30%;
  background-size: 75%;
}
.frontCenterTitle {
  grid-area: frontCenter;
  max-width: calc(100vw - (24 * var(--vh)) );
  height: calc(7 * var(--vh));
  background-color: rgb(25,25,25);
  font-size: calc(4 * var(--vh));
  font-weight: 900;
  color: var(--silver);
}
.frontCenterTitle > sup,
.frontCenterTitle > sub {
  color: var(--asbestos);
}
.homeIcon, .homeIconLink, .homeName,
.frontCenterTitle,
.auxRight,
.proRight {
  display: flex;
  align-items: center;
  justify-content : center;
  flex-direction: row;
  flex-wrap: nowrap;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}
.homeIconLink, .homeIconLogo {
  width: calc(8 * var(--vh));
  height: calc(8 * var(--vh));
}
.homeIconLogo { padding: var(--vh); }

.auxLeft { grid-area: auxLeft; }

.homeNavi, .homeNaviMini {
  display: grid;
  grid-gap: var(--vh) 1vw;
  place-self: center center;
  place-items: stretch stretch;
}
.homeNavi {
  grid-area: splashContent;
  grid-template-rows: 
    calc(20 * var(--vh))
    calc(20 * var(--vh))
    calc(20 * var(--vh));
  grid-template-columns: repeat(4, 20vw);
}
.homeNaviMini {
  grid-template-rows: calc(20 * var(--vh));
  grid-template-columns: repeat(2, 20vw);
}

.centreSpash {
  grid-area: splashContent;
  display: grid;
  grid-template-rows: calc(75 * var(--vh));
  grid-template-columns: 75vw;
  place-self: center center;
  place-items: stretch stretch;
}

.slidesLayout, .slidesNestedLayout {
  display: grid;
  grid-template-rows: calc(92 * var(--vh));
  grid-template-columns: minmax(min-content, 15vmin) 1fr;
  width: 100%;
  height: calc(100% - (8 * var(--vh)) );
}
.slidesLayout {
  grid-template-areas: 
    'slidemenu slidearea';
}
.slidesNestedLayout {
  grid-template-areas: 
    'slidesubmenu slidesubarea';
}

.slidesSlide, .slidesNestedSlide {
  grid-area: slidearea;
  background-color: var(--clouds);
  overflow-y: auto;
  color: black;
  box-shadow: var(--dropShadowLeft1);
}
.slidesSlide {
  grid-area: slidearea;
}
.slidesNestedSlide {
  grid-area: slidesubarea;
  padding: calc(2 * var(--vh)) 3vw;
}

.slidesMenu, .slidesNestedMenu {
  overflow-y: auto;
}

.slidesMenu {
  grid-area: slidemenu;
  background-color: rgb(35,35,35);
}
.slidesNestedMenu {
  grid-area: slidesubmenu;
  background-color: var(--silverfade);
  box-shadow: var(--dropShadowLeft1);
}
.slidesNestedMenu hr:nth-child(odd) {
  margin: 4px 0;
}
.slidesNestedMenu hr:nth-child(even) {
  display: none;
}

.slideMenuButton, .slideNestedMenuButton {
  display: block;
  width: 100%;
  min-height: 6vmin;
  padding: 0 2vmin 0 1vmin;
  font-size: 1.75vmin;
  background-color: transparent;
  border-bottom: 1px solid black;
  cursor: pointer;
  text-align: left;
  white-space: nowrap;
}
.slideMenuButton {
  color: var(--silver);
}
.slideNestedMenuButton {
  color: rgb(35,35,35);
  border-color: var(--asbestosfade);
}
.slideNestedMenuButton:nth-child(2) {
  border-top: 1px solid var(--asbestosfade);
}
.slideNestedSearch {
  display: block;
  width: 100%;
  min-height: calc(4 * var(--vh));
  max-height: calc(4 * var(--vh));
  font-size: calc(2 * var(--vh));
  text-indent: 1ch;
  padding-right: 0.75ch;
  border-width: 0;
  border-style: none;
  box-shadow: inset 0 0 5px 0px rgba(0,0,0,0.5);
}

.slideMenuButton:hover, 
.slideMenuButton:active, 
.slideMenuButton.slideOn,
.slideNestedMenuButton:hover, 
.slideNestedMenuButton:active, 
.slideNestedMenuButton.slideOn {
  width: 100%;
  color: rgb(35,35,35);
  background-color: var(--silver);
}
.slideMenuButton:hover, 
.slideMenuButton:active, 
.slideMenuButton.slideOn {
  box-shadow: var(--dropShadow00);
}
.slideNestedMenuButton:hover, 
.slideNestedMenuButton:active, 
.slideNestedMenuButton.slideOn {
  box-shadow: none;
}
.slideMenuButton:disabled:hover,
.slideNestedMenuButton:disabled:hover {
  color: var(--silver);
  background-color: transparent;
  box-shadow: none;
}
/* ////////////////////////// */

.bleed {
  padding: 0;
  margin: 0;
  border: none;
  width: 100%;
  height: 100%;
}

.gap { margin: 0 5px; }
.gapR { margin: 0 5px 0 0; }
.gapL { margin: 0 0 0 5px; }
.gapsR { row-gap: 2vh; }
.gapsC { column-gap: 2vw; }

.badge {
  position: absolute;
  right: 5px;
  top: 5px;
}

.titleSection {
  max-width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: center;
}
.titleSection > span {
  display: table-cell;
  width: auto;
  font-size: 1.75rem;
  font-style: normal;
  vertical-align: bottom;
  margin: 0 10px;
}
@media screen and (max-width: 1200px){
  .titleSection > span, .titleSection > button {
    font-size: 1.5rem;
  }
}

/*
.wrapDeck {
  display: flex;
  width: 100%;
  margin: 16px 0;
  flex-flow: row wrap;
  align-items: flex-start;
  justify-content: space-evenly;
}
.wrapDeckCard {
  width: calc(92% / 3);
  margin: 8px 0;
}
@media screen and (max-width: 1500px){
  .wrapDeckCard {
    width: calc(94% / 2);
  }
}
@media screen and (max-width: 1000px){
  .wrapDeckCard {
    width: 96%
  }
}
*/
.tableList {
  min-width: calc(75vw - (10 * var(--vh)) - 0.75vw);
  display: table;
}
.tableList > div,
.tableList > button {
  margin: 2vh 0;
}

/* modal popup */
.overlay {
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: 10;
  background-color: rgba(0,0,0,0.5);
  transition: opacity 200ms;
  overflow: hidden;
}

n-lg-model, n-md-model, n-sm-model {
  background: rgb(236, 240, 241);
  position: relative;
  z-index: 10;
  border: 1px solid rgb(0,0,0);
  box-shadow: 0 0 100px 500px rgba(0,0,0,0.5);
  display: block;
  min-width: -moz-fit-content;
  min-width: fit-content;
  color: black;
}
n-lg-model {
  margin: calc(5 * var(--vh)) auto;
  max-width: 80%;
  min-height: 75%;
  max-height: calc(90 * var(--vh));
  padding: 1vmax 3vmax 3vmax 3vmax;
}
n-md-model {
  margin: calc(10 * var(--vh)) auto calc(5 * var(--vh)) auto;
  max-width: 60%;
  min-height: calc(60 * var(--vh));
  max-height: calc(85 * var(--vh));
  padding: 1vmax 2vmax 2vmax 2vmax;
}
n-sm-model {
  margin: calc(15 * var(--vh)) auto;
  max-width: 50%;
  min-height: calc(40 * var(--vh));
  max-height: calc(60 * var(--vh));
  padding: 1vmax 1vmax;
}
n-model-head {
  display: flex;
  justify-content: space-between;
  align-items: center;
  text-transform: capitalize;
  height: 3vmax;
  font-size: 2.25vmax;
  font-weight: 600;
  white-space: nowrap;
}
n-lg-model-content, n-md-model-content, n-sm-model-content {
  overflow-y: auto;
  margin: 8px 0 0 0;
  border-top: 1px dotted black;
  border-bottom: 1px dotted black;
}
n-lg-model-content {
  display: block;
  min-height: calc(75% - 30px - 3vmax);
  max-height: calc( (90 * var(--vh)) - 30px - 3vmax);
}
n-md-model-content {
  display: block;
  min-height: calc( (60 * var(--vh)) - 30px - 3vmax);
  max-height: calc( (85 * var(--vh)) - 30px - 3vmax);
}
n-sm-model-content {
  display: block;
  min-height: calc( (40 * var(--vh)) - 30px - 3vmax);
  max-height: calc( (60 * var(--vh)) - 30px - 3vmax);
}

@media screen and (max-width: 1150px){
  n-lg-model { max-width: 90%; }
}
@media screen and (max-width: 1000px){
  n-lg-model { max-width: 95%; }
}

.centre {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0;
}

.centreColumn {
  display: flex;
  flex-direction: column;
  flex-wrap: wrap-reverse;
  align-items: center;
  padding: 0;
}

.centreRow, .leftRow {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;
}
.centreRow {
  justify-content: center;
}
.leftRow {
  justify-content: flex-start;
}
.centreRow > span { margin: 0 10px; }

.topLine > div { align-self: flex-start; }

.centreTrue {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.centreText { text-align: center; }
.leftText { text-align: left !important; }
.rightText { text-align: right; }

.middle {
  display: flex;
  align-items: center;
}

.split {
  display: flex;
  justify-content: space-between;
  margin: 0;
}
.splitReverse {
  display: flex;
  justify-content: space-between;
  flex-wrap: wrap-reverse;
  margin: 0;
}
.half { width: 50%; }

.full {
  display: flex;
  justify-content: center;
  width: 100%;
}

.lAlign { float: left; }
.rAlign { float: right; }

.flexRR {
  display: flex;
  flex-direction: row-reverse;
}

.lastSpanRight span:last-child {
  justify-self: right;
}

.space5x5 { padding: 5vh 5vw; }
.space2vsq { padding: 2vh; }
.space1v { padding: 1vmax; }
.space2v { padding: 2vh 2vw; }
.space3v { padding: 3vh 3vw; }
.space36v { padding: 3vh 6vw; }
.space { padding: 24px; }
.espace { padding: 0.5rem; }
.vspace { padding: 24px 0; }
.vspacehalf { padding: 12px 0; }
.nspace { padding: 1vh 2vw 0 2vw; }
.uspace { padding: 0 2vw 1vh 2vw; }
.u10space { padding: 0 10px 10px 10px; }
.bspace { padding-bottom: 24px; }
.vbreak { padding: 0 0 24px 0; }
.nospace { padding: 0; }

.margin5 { margin: 5px; }
.vmargin { margin: 24px 0; }
.vmarginhalf { margin: 12px 0; }
.vmarginquarter { margin: 6px 0; }
.vgap { margin-bottom: 2vh; }
.wmargin { 
  margin-right: auto;
  margin-left: auto;}
.nomargin, .nopmargin p { margin: 0; }

.vwrap > span { margin-top: 0.5rem; }

.noindent,
.noindent > dd {
  margin-left: 0px;
  text-indent: 0;
}

.line05x { line-height: 0.5; }
.line1x { line-height: 1; }
.line2x { line-height: 2; }
.line3x { line-height: 3; }
.line4x { line-height: 4; }

.indent { padding-left: 2ch; }
.indent3 { padding-left: 3ch; }
.indenText { text-indent: 0.75ch; }
.indentR { padding-right: 16px; }
.indent2v { padding-left: 2vw; }
.indent5v { padding-left: 5vw; }

.breath { margin: 0 5px; }

.readlines p {
  margin: 10px 0 15px 0;
}
.readlines dd,
.readlines dt {
  margin: 5px 0 5px 0;
}

.dropCeiling { margin-top: calc(4vh + 1rem); }
.overscroll { margin-bottom: 5vh; }
.overscroll2x { margin-bottom: 10vh; }

.bottomLine {
  padding-bottom: 0.5rem;
  border-bottom: 1px groove lightgray;
  margin-bottom: 0.5rem;
}

.noteCard {
  border-top: 1px dotted var(--peterriver);
  border-right: none;
  border-bottom: none;
  border-left: none;
}
.noteCard > i {
  padding-left: 8px;
}
.noteCard > p {
  margin-top: 20px;
  padding-left: 8px;
}
.noteCard > div {
  margin: 20px 0 10px 0;
  padding-left: 8px;
}

.footnotes {
  box-shadow: none;
  font-size: small;
  text-transform: none;
  margin: 0 2vw;
  max-width: 800px;
}
.footnote {
  margin: 0.5vh 3vw;
  display: list-item;
  list-style: lower-roman;
}
.fill {
  margin: 0;
  padding: 0;
}

.beside {
  display: flex;
  align-content: center;
  align-items: center;
}

.evenRow, .rightRow {
  width: 100%;
  margin: 0;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}
.evenRow {
  justify-content: space-evenly;
}
.rightRow {
  justify-content: flex-end;
}

.doFlexWrap { flex-wrap: wrap; }
.doJustWeen { justify-content: space-between; }

.autoFlex, .comfort, .balance, .balancer,
.rowWrap, .rowWrapR {
  display: flex;
  flex-flow: row wrap;
}

.comfort { justify-content: space-between; }
.balance { justify-content: space-around; }
.balancer { justify-content: space-evenly; }

.rowWrap, .rowWrapR { 
  align-items: center;
  row-gap: 5px;
}
.rowWrap { justify-content: flex-start; }
.rowWrapR { justify-content: flex-end; }

.autoFlex {
  align-items: start;
  justify-content: stretch;
}
.cardify > div,
.cardify > span > div,
.cardify > span > span > div,
.autoFlex > div {
  width: -moz-fit-content;
  width: fit-content;
  margin: 2vmin;
  padding: 1vmin 2vmin 2vmin 2vmin;
  box-shadow: var(--dropShadow00);
}
.cardify > div > h3,
.cardify > span > div > h3,
.cardify > span > span > div > h3,
.autoFlex > div > h3 {
  padding-bottom: 0.5vmin;
  border-bottom: 1px groove;
}

.autoGrid {
  display: grid;
  grid-template-columns: repeat( auto-fit, minmax(20ch, 1fr) );
  align-items: baseline;
}

.minWide { width: min-content !important; }
.maxWide { width: max-content !important; }
.fitWide { 
  width: -moz-fit-content !important;
  width: fit-content !important; 
}
.wide {
  width: 100%;
  margin: 0 auto;
}
.w100 { width: 100% !important; }
.wAuto { width: auto !important; }

.minHeight { height: min-content; }
.autoHeight { min-height: auto; }
.hide { display: none !important; }
.hidden { display: none; }
.invisible { visibility: hidden; }
.collapse { visibility: collapse; }
/*.offscreen {content-visibility: auto; }*/
.hiddenPIN {
  opacity: 0;
}
.showOnHover:hover > .hiddenPIN {
  opacity: 1;
}
@supports (-webkit-touch-callout: none) {
  .showOnHover:focus > .hiddenPIN {
    opacity: 1;
  }
}
.hiddenPrime {
  cursor: crosshair;
  margin: 1vh 1vw;
  border: 1ch groove lightgray;
  padding: 2vh 2vw;
  background-color: white;
}
.hiddenPrime > i {
  width: 100%;
  display: flex;
  font-size: 10vh;
  font-weight: 600;
  letter-spacing: 1ch;
  text-indent: 1ch;
}

.verLine { vertical-align: middle; }

.tweekUp { vertical-align: super; }

.overrideline { line-height: 1rem; }

.wrap { white-space: normal; }

.noWrap { white-space: nowrap; }

.vSpaceGaps {
  border-bottom: 5vh solid var(--clouds);
}

.smaller { font-size: 0.7rem; }
.small { font-size: 0.8rem; }
.smTxt { font-size: 0.9rem; }
n-sm { 
  font-size: 0.8rem;
  line-height: 1;
  letter-spacing: 0.5px;
}
n-sm-b {
  font-size: 0.8rem;
  font-weight: 600;
  letter-spacing: 0.5px;
}

.med { font-size: 1rem; }

.medBig { font-size: 1.2rem; }

.big { font-size: 1.5rem; }

.bigbig { font-size: 1.65rem; }

.bigger { font-size: 1.75rem; }

.biggest { font-size: 2rem; }

.biggester { font-size: 2.5rem; }

.vbig { font-size: 2vh; }
.vbigger { font-size: 3vh; }

.dbbleWide { min-width: 30vw; }
.inlineForm > input[type='text'].dbbleWide { width: 30vw; }

input.variableInput.medBig {
  font-size: 1.2rem; 
  height: 40px;
  width: 248px;
}
input.variableInput.big { 
  font-size: 1.5rem;
  height: 48px;
  width: 256px;
}
input.variableInput.bigger { 
  font-size: 1.75rem; 
  height: 56px;
  width: 264px;
}
input.variableInput.biggest { 
  font-size: 2rem;
  height: 64px;
  width: 272px;
}
input.miniIn6, select.miniIn6 { width: 6ch; }
input.miniIn8, select.miniIn8 { width: 8ch; }
input.miniIn12, select.miniIn12 { width: 12ch; }
input.miniIn18, select.miniIn18 { width: 18ch; }
input.miniIn24, select.miniIn24 { width: 24ch; }

.multiSelectContain .dropdown-container {
  min-width: 15rem;
  max-width: 400px;
  margin: 0;
  text-align: initial;
}
.numberSet {
  min-height: 2rem;
  line-height: 1.1;
  font-family: 'VarelaLocal';
}
input.numberSet:focus, input.numberSet:active {
  border-color: var(--neptuneColor);
}
button.numberSet {
  font-size: 0.9rem;
  text-transform: none;
}

.fltrsInput {
  width: 100%;
  padding: 0 1vmin;
  display: flex;
  justify-content: center;
  align-items: center;
}
.fltrsInput input, .fltrsInput select {
  height: 1.25rem;
  min-width: 80%;
  font-size: 0.9rem;
  margin: 5px 5px;
}

.navIcon {
  display: inline-block;
  vertical-align: middle;
  line-height: normal;
}
.navIcon.middle {
  display: flex;
  align-items: baseline;
}
.icontext {
  display: block;
  white-space: nowrap;
  font-size: 0.9rem;
}

.navSpacer {
  flex-grow: 2;
}

.tableAction {
  min-width: 1.75rem;
  max-width: 10ch;
  height: 1.5rem;
}
.tableAction.narrow {
  max-width: 4ch;
}

.tableInput {
  min-width: 10ch;
  max-width: min-content;
  height: 1.5rem;
}

.inlineRadio { height: 1.5rem; }
.inlineCheckbox {
  height: 2rem;
  width: 1.5rem;
}
.mockInputBox, .mockInputBoxOFF {
  width: 15rem;
  min-height: 2rem;
  max-height: 2rem;
  line-height: 1.1;
}
.mockInputBox {
  border: 1px solid black;
}
.mockInputBoxOFF {
  border: 1px dotted black;
  background-color: rgb(235,235,228);
}

.actionBox .flatpickr-input ~ .form-control {
  max-width: 100%;
  font-size: 1.1rem;
  text-indent: 0rem;
}

.timeInputs .flatpickr-input ~ .form-control {
  width: 9ch;
  font-size: 1rem;
  text-indent: 0.10rem;
}

.scrollToNav {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
  background-color: rgb(25,25,25);
}
.scrollToNav span {
  padding: 0 1vw;
  font-size: 1.75vh;
}
.scrollToNav span:focus {
  border: 1px dotted var(--clouds);
}

.anchorTarget {
  position: relative;
  top: 0;
}

.popTbody > tr:first-child > td { 
  border-top: 3px solid rgba(255,255,255,0.5);
}

.popTbody > tr:last-child > td {
  padding-bottom: 50px;
  border-right: none;
}

.grid {
  display: table;
  width: 100%;
  justify-content: center;
  border-collapse: collapse;
}
.gridRow {
	display: table-row;
	border-bottom: 1px solid rgba(0,0,0,0.2);
}
.gridCell {
	display: table-cell;
	text-align: center;
	vertical-align: middle;
	padding: 0;
  word-break: break-word;/*weird no standerd thing but it works*/
  word-wrap: break-word;
}
.gridCell:first-child {
	text-align: left;
}
.gridCell:last-child {
	text-align: right;
}
.openGridCell {
	display: table-cell;
  border-bottom: 0.1em solid rgba(255,255,255,0.3);
	vertical-align: middle;
	padding: 2px 2px 2px 2px;
}

/* still using?? */
.wipCol {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.wipCol > section {
  position: relative;
  width: calc((100% - 60px) / 3);
  min-height: 100%;
  margin: 5px 10px 30px 10px;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  align-items: stretch;
}
@media screen and (max-width: 1500px){
  .wipCol > section {
    width: calc((100% - 40px) / 2);
  }
  .wipCol > section.dblSection {
    width: calc(( (100% - 40px) / 2 ) * 2);
  }
}
@media screen and (max-width: 1000px){
  .wipCol > section {
    width: calc(100% - 20px);
  }
  .wipCol > section.dblSection {
    width: calc(100% - 20px);
  }
}

.wipCol > section > div {
  width: 100%;
}
.wipCol > section > .fillHeight {
  flex-grow: 2;
}

.wipRow {
  position: relative;
  width: 100%;
  min-height: 100%;
  margin: 32px 32px;
  padding-bottom: 16px;
  border: 1px solid rgb(30,30,30);
  background-color: var(--black);
}

.wellSpacedLine {
  margin-bottom: 8px;
  min-height: 3rem;
  padding: 8px 0px;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.wellSpacedLine > span {
  padding: 0 15px;
  border-right: 1px solid rgba(255,255,255,0.3);
}

.wellSpacedLine > span:last-child {
  margin: 0;
  border-right: 1px solid transparent;
}

.functionalFooter {
  width: 100%;
  padding: 0 10px;
}
.functionalFooter label {
  font-size: 0.75rem;
  padding: 0 15px;
  border-left: 1px solid rgba(255,255,255,0.3);
  border-right: 1px solid rgba(255,255,255,0.3);
}

.nestedTable { table-layout: fixed; }

.nestedTable td {
  border-bottom: none;
  border-right: none;
  border-top: 1px solid rgba(0,0,0,0.2);
}
.nestedTable td:empty {
  border-top: none;
}
n-mock-table { display: table; }
n-mock-table-head { display: table-header-group; }
n-mock-table-group { display: table-row-group; }
n-mock-table-row { display: table-row; }
n-mock-table-row:last-child > n-mock-table-cell {
  border-bottom: none
}
n-mock-table-cell {
  display: table-cell;
  border-right: 1px solid rgba(255,255,255,0.3);
  border-bottom: 1px solid rgba(255,255,255,0.1);
  vertical-align: middle;
  padding: 1ch 0.5ch;
  text-align: center;
  word-break: break-word;
  overflow-wrap: break-word;
  word-wrap: break-word;
}
n-mock-table-cell:last-child {
  border-right: none;
  margin: none;
}

n-col-table {
  display: grid;
  grid-template-columns: 150px repeat( auto-fit, minmax(200px, 300px) );
  grid-auto-flow: column;
  grid-gap: 10px; 
  overflow:auto;
  align-items: baseline;
}
n-col-table-head,
n-col-table-col {
  display: grid;
  grid-template-rows: repeat( auto-fit, minmax(1rem, auto) );
  align-items: baseline;
}
n-col-table-head > span,
n-col-table-col > span {
  border: 2px dotted pink;
}
n-col-table-head {
  position: sticky;
  top: 0;
  left: 0;
  background-color: var(--clouds);
}
n-col-table-head > span {
  font-weight: bold;
  text-transform: capitalize;
}

/*.twoSqIcons { width: 80px; }*/
.max1200 { max-width: 1200px; }
.max1000 { max-width: 1000px; }
.max875 { max-width: 875px; }
.max750 { max-width: 750px; }
.max600 { max-width: 600px; }
.max500 { max-width: 500px; }
.max400 { max-width: 400px; }
.max300 { max-width: 300px; }
.max250 { max-width: 250px; }
.max100 { max-width: 100px; }
.min600 { min-width: 600px; }
.min400 { min-width: 400px; }
.min350 { min-width: 350px; }
.min300 { min-width: 300px; }
.min200 { min-width: 200px; }

.minWfit { 
  min-width: -moz-fit-content;
  min-width: fit-content;
}
.maxW70 { max-width: 70vw; }
.maxW50 { max-width: 50vw; }
.maxW30 { max-width: 30vw; }

.inline { display: inline-block; }
.flxGrow { flex-grow: 2; }

.minH60 { min-height: 60px; }


@media (orientation: portrait) {
  
  .simpleContainer, .splashContainer {
    grid-template-rows: 8vmin calc( (100 * var(--vh)) - 8vmin);
  }
  .simpleContainer .tenHeader,
  .splashContainer .tenHeader {
    grid-template-rows: 1vmin 7vmin;
    grid-template-columns: 8vmin 1fr 8vmin;
    grid-template-areas: 
      'topBorder topBorder topBorder'
      'homeIcon frontCenter proRight';
  }
  .homeIcon {
    grid-area: topBorder / topBorder / homeIcon / homeIcon;
    padding: 0;
    background-position: 50% 50%;
  }
  .homeIconLink, 
  .homeIconLogo {
    width: 8vmin;
    height: 8vmin;
    padding: 1vmin;
  }
  .frontCenterTitle {
    max-width: calc(100vw - 16vmin);
    height: 7vmin;
    font-size: 4vmin;
  }
  .navButtonText {
    font-size: 3vmin;
    padding: 0 1vmin;
  }
  .slidesLayout, .slidesNestedLayout {
    grid-template-rows: calc( (100 * var(--vh)) - 8vmin);
    height: calc(100% - 8vmin);
  }
  .taskLink {
    margin: 1vmin 0;
    width: 5.5vmin;
    height: 5.5vmin;
    font-size: 3.25vmin;
  }
  .followTask i {
    width: 5.5vmin;
    height: 5.5vmin;
    font-size: 2.25vmin;
  }
}
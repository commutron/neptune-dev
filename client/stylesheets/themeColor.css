/* 
@media (prefers-color-scheme: no-preference / light / dark) {

}
*/
.lightTheme {
  background-color: var(--clouds);
  color: black;
}

.darkTheme {
  background-color: var(--dark);
  color: white;
}
.darkTheme .blackT {
  color: var(--clouds);
}
.darkTheme .grayT {
  color: var(--cloudstrans);
}
.darkTheme .liteToolOn,
.darkTheme .liteToolOff { 
	border-right-color: rgb(0,0,0);
	border-left-color: rgb(0,0,0);
}
.darkTheme td,
.darkTheme tr:last-child td,
.darkTheme .mockTableCell,
.darkTheme .mockTableRow {
  border-color: white;
  border-color: rgba(0,0,0,0.4);
}

.darkTheme .fltrs {
	color: var(--black);
  background-color: transparent;
}
.darkTheme .itmFltrBlock {
  background-color: rgb(30,30,30);
}


.darkTheme .jump:hover, 
.darkTheme .jump:focus, 
.darkTheme .jump:active {
  border-bottom-color: #3498db;
}
.darkTheme .jumpBar {
  border-left-color: white;
}
.darkTheme .jumpBar:hover,
.darkTheme .jumpBar:focus,
.darkTheme .jumpBar:active {
  border-bottom-color: #3498db;
}
.darkTheme .leapText:hover,
.darkTheme .leapText:focus,
.darkTheme .leapText:active {
  color: var(--peterriver);
  border-bottom-color: var(--peterriver);
}
.darkTheme .leapBar {
	color: var(--white);
	border-top-color: var(--silverfade);
  border-bottom-color: var(--silverfade);
}
.darkTheme .leapBar:hover, 
.darkTheme .leapBar:focus,
.darkTheme .leapBar:active {
  background-color: var(--silverfade);
}

.darkTheme .flatpickr-input ~ .form-control {
  color: white;
}
/*
.invert {
  background-color: var(--dark);
  color: white;
}



.invert a:active {
  border: 1px dotted white;
}
.invert input[type='reset'] {
  color: white;
  border-color: white;
}
.invert input[type='reset']:hover {
  color: black;
  background-color: white;
  border-color: black;
}

*/
/*.invert form:focus {*/
/*  border-color: rgb(28,117,188);*/
/*}*/
/*
.invert input, .invert select, .invert textarea,
.invert input {
  border-bottom-color: white;
}
.invert select {
  background-color: white;
  border-color: black;
}
.invert input:focus, .invert input:active {
  border-bottom-color: var(--neptuneColor);
}
.invert select:focus, .invert select:active,
.invert textarea:focus, .invert textarea:active {
  border-color: var(--neptuneColor);
}
.invert input:focus + label,
.invert textarea:focus + label,
.invert select:focus + label {
  color: var(--neptuneColor);
}
.invert .listSortInput input,
.invert .listSortInput select {
  color: black;
}

.invert hr {
  opacity: 0.8; 
}

.invert::-webkit-input-placeholder,
.invert::-moz-placeholder,
.invert:-moz-placeholder,
.invert:-ms-input-placeholder { 
  opacity: 1;
}
.tenHeader.invert,
.frontCenterTitle.invert,
.auxRight.invert,
.proRight.invert {
  background-color: var(--clouds);
  color: var(--black);
}

.invert .inlineLink {
  color: white;
}

.invert .open {
  color: black;
}

.invert .tagAddButton:hover {
  color: black;
}
.invert .moveLR,
.invert .yellowBox > p, */
/*.invert .actionIconText,*/
/*
.invert .cold:hover {
  color: black;
}

.invert .moveLR:hover, .invert .moveLR:active {
  color: black;
  background-color: white;
}

.invert .actionForm .redIn option,
.invert .actionForm .redIn optgroup {
  color: black;
  background-color: white;
}
.invert input.redIn,
.invert select.redIn {
  background-color: transparent;
  border-color: var(--black);
}
.invert .redIn {
  color: rgb(231,76,60);
}
.invert input.redIn:focus {
  border-bottom-color: red;
}
.invert select.redIn:focus,
.invert textarea.redIn:focus {
  border-color: red;
}
.invert .redIn:focus + label {
  color: rgb(231,76,60);
}
.invert .inputMultiSelected {
  background-color: white;
  border-color: var(--black);
}
.invert #ncselect + .formBarIcon,
.invert #ncselect ~ .actionIconText {
  color: var(--alizarin);
}
.invert #ncselect:hover + .formBarIcon,
.invert #ncselect:checked + .formBarIcon {
  background-color: var(--alizarin);
  color: white;
}
.invert #firstselect + .formBarIcon,
.invert #firstselect ~ .actionIconText {
  color: var(--peterriver);
}
.invert #firstselect:hover + .formBarIcon,
.invert #firstselect:checked + .formBarIcon {
  background-color: var(--peterriver);
  color: white;
}

.invert .stickyBar {
	color: white;
  background-color: rgba(30,30,30,0.5);
}


.invert details {
  box-shadow: 0 0 5px 0px rgba(0,0,0,0.75);
}

.invert .ct-label {
  color: black;
}

.invert .whiteT { color: var(--blackT); }
.invert .blackT { color: white; }
.invert .grayT {
  color: var(--concrete);
}

*/

